 int memo[1001][1001];
    int vis[1001];
    
    int knapSack(int W, int wt[], int val[], int n) 
    {
        for(int i=0; i<=n; ++i){
            memo[i][0] = 0;
        }
        
        for(int i=0; i<=W; ++i){
            memo[0][i] = 0;
        }
        
        for(int i=1; i<=n; ++i){
            for(int w=1; w<=W; ++w){
                if(wt[i-1] <= w){
                    memo[i][w] = max(memo[i-1][w], memo[i-1][w-wt[i-1]] + val[i-1]);
                }else{
                    memo[i][w] = memo[i-1][w];
                }
            }
        }

        memset(vis, 0, sizeof(vis));
        int i=n, w = W;
        while(i>0 && w>0){
            if(memo[i][w] != memo[i-1][w]){
                vis[i-1] = 1;
                w -= wt[i-1];
            }
            --i;
        }
        for(int i=0; i<n; ++i){
            if(vis[i]){
                cout << i<<" ";
            }
        }
        cout << endl;
        
        return memo[n][W];
    } 
