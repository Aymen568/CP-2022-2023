//Function to return max value that can be put in knapsack of capacity W.
    int memo[1001][1001];
    int knapSack(int W, int wt[], int val[], int n) 
    {
        memset(memo, -1, sizeof(memo));
        return solve(W, wt, val, n);
    }    
    
    
    int solve(int W, int wt[], int val[], int n){
        if(W==0 || n==0){
            return 0;
        }
        if(memo[W][n] != -1){
            return memo[W][n];
        }
        if(wt[n-1] <= W){
            return memo[W][n] = max(solve(W, wt, val, n-1), solve(W-wt[n-1], wt, val, n-1) + val[n-1]);
        }
        return memo[W][n] = solve(W, wt, val, n-1);
    }
